<Activity mc:Ignorable="sap sap2010" x:Class="dataExtract" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:bew="clr-namespace:BalaReva.Excel.WorkBook;assembly=BalaReva.Excel" xmlns:m="clr-namespace:Mavenick;assembly=AutoCloseMsgBox" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="clr-namespace:PDF;assembly=pdfLibrary" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="allSheets" Type="OutArgument(s:String[])" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>261.6,370.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>dataExtract_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>DocumentFormat.OpenXml.Office2010.ExcelAc</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="241.6,270.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="pdfFiles" />
      <Variable x:TypeArguments="x:Int32" Name="pageNumber" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="page" />
      <Variable x:TypeArguments="x:Int32" Default="2" Name="counter" />
      <Variable x:TypeArguments="x:String" Name="fullPageResult" />
      <Variable x:TypeArguments="s:String[]" Name="allLines" />
      <Variable x:TypeArguments="x:String" Name="fileContent" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="i" />
      <Variable x:TypeArguments="s:String[]" Name="allFiles" />
      <Variable x:TypeArguments="s:String[]" Name="allPrevFiles" />
      <Variable x:TypeArguments="x:String" Name="poNumCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="poNumAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="poNumAsciiCodeChar" />
      <Variable x:TypeArguments="x:String" Name="poRowNo" />
      <Variable x:TypeArguments="ui:GenericValue" Name="poNumVal" />
      <Variable x:TypeArguments="x:String" Name="dateCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="dateAsiiCode" />
      <Variable x:TypeArguments="x:String" Name="dateRowNo" />
      <Variable x:TypeArguments="x:String" Name="dateAsiiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="dateVal" />
      <Variable x:TypeArguments="x:String" Name="styleCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="styleAsiiCode" />
      <Variable x:TypeArguments="x:String" Name="styleRowNo" />
      <Variable x:TypeArguments="x:String" Name="styleAsiiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="styleVal" />
      <Variable x:TypeArguments="x:String" Name="totalCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="totalAsiiCode" />
      <Variable x:TypeArguments="x:String" Name="totalRowNo" />
      <Variable x:TypeArguments="x:String" Name="totalAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="totalVal" />
      <Variable x:TypeArguments="x:String" Name="shipCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="shipAsiiCode" />
      <Variable x:TypeArguments="x:String" Name="shipRowNo" />
      <Variable x:TypeArguments="x:String" Name="shipAsiiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="shipVal" />
      <Variable x:TypeArguments="x:String" Name="potypeCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="potypeAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="potypeRowNo" />
      <Variable x:TypeArguments="x:String" Name="potypeAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="potypeVal" />
      <Variable x:TypeArguments="x:String" Name="factoryCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="factoryAsiiCode" />
      <Variable x:TypeArguments="x:String" Name="factoryRowNo" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar1" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal1" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar2" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar3" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar4" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar5" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar6" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar7" />
      <Variable x:TypeArguments="x:String" Name="factoryAsiiCodeChar8" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal8" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal7" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal6" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal5" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal4" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal3" />
      <Variable x:TypeArguments="ui:GenericValue" Name="factoryVal2" />
      <Variable x:TypeArguments="x:String" Name="invCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="invAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="invRowNo" />
      <Variable x:TypeArguments="x:String" Name="invAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="invVal" />
      <Variable x:TypeArguments="x:String" Name="valCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="valAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="valRowNo" />
      <Variable x:TypeArguments="x:String" Name="valAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="valValue" />
      <Variable x:TypeArguments="x:String" Name="markCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="markAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="markRowNo" />
      <Variable x:TypeArguments="x:String" Name="markAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="markVal" />
      <Variable x:TypeArguments="s:String[]" Name="allLiness" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="j" />
      <Variable x:TypeArguments="x:String" Name="etaCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="etaAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="etaRowNo" />
      <Variable x:TypeArguments="x:String" Name="etaAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="etaVal" />
      <Variable x:TypeArguments="x:String" Name="etdCellInfo" />
      <Variable x:TypeArguments="x:Int32" Name="etdAsciiCode" />
      <Variable x:TypeArguments="x:String" Name="etdRowNo" />
      <Variable x:TypeArguments="x:String" Name="etdAsciiCodeChar" />
      <Variable x:TypeArguments="ui:GenericValue" Name="etdVal" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Data Scrape" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_220">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Get All Prev. Files" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_53">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[allPrevFiles]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("allText", "*.xlsx")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Delete All Prev. File" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[allPrevFiles]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_117">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[file]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope [ Create Excel File ]" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" WorkbookPath="allText\headeFooterData.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="375.2,308.8" sap2010:WorkflowViewState.IdRef="Sequence_98">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet2">
                <ui:ExcelWriteCell.Text>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelWriteCell.Text>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_42" SheetName="Sheet3">
                <ui:ExcelWriteCell.Text>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelWriteCell.Text>
              </ui:ExcelWriteCell>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <Assign DisplayName="Get All PDF File" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_44">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[pdfFiles]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("documents", "*.pdf")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each [ Scrape PDF ]" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[pdfFiles]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="file" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="1124.8,21200" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1083.2,21107.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[file]" sap:VirtualizedContainerService.HintSize="1041.6,88" sap2010:WorkflowViewState.IdRef="StartProcess_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:StartProcess>
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Pdf File Operation" sap:VirtualizedContainerService.HintSize="1041.6,20731.2" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="8944a59793036c9d215de7a4ec787e38" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='07_700292ff_PRIDE_27.02.20- Lerros.pdf - Adobe Acrobat Reader DC' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1008,20584" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="966.4,22.4" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                        <Sequence DisplayName="File Settings" sap:VirtualizedContainerService.HintSize="966.4,424" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" DisplayName="Enter Font size" EmptyField="True" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="True" SimulateType="False" Text="50">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4a5914e449e3928cd4b96c967ba31de5" Selector="&lt;wnd aaname='Zoom Value' cls='Edit' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:TypeInto.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:TypeInto>
                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Press Enter" sap:VirtualizedContainerService.HintSize="333.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="enter" KeyModifiers="None" SpecialKey="True">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="da0df32186c99597200b8c15a77b562b">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SendHotkey.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendHotkey>
                        </Sequence>
                        <p:GetPages DisplayName="Get pages" sap:VirtualizedContainerService.HintSize="966.4,22.4" sap2010:WorkflowViewState.IdRef="GetPages_1" PDF_FilePath="[file]" Pages="[pageNumber]" />
                        <m:AutoCloseMessageBox ChosenButton="{x:Null}" Buttons="Ok" CloseMessageBox="5" DisplayName="Auto close message box" sap:VirtualizedContainerService.HintSize="966.4,22.4" sap2010:WorkflowViewState.IdRef="AutoCloseMessageBox_1" Message="Please wait 5 seconds." Title="Alert" />
                        <Delay mva:VisualBasic.Settings="{x:Null}" DisplayName="Delay 10 seconds" Duration="00:00:10" sap:VirtualizedContainerService.HintSize="966.4,22.4" sap2010:WorkflowViewState.IdRef="Delay_1">
                          <TextExpression.Namespaces>
                            <sco:Collection x:TypeArguments="x:String">
                              <x:String>System.Activities</x:String>
                              <x:String>System.Activities.Statements</x:String>
                              <x:String>System.Activities.Expressions</x:String>
                              <x:String>System.Activities.Validation</x:String>
                              <x:String>System.Activities.XamlIntegration</x:String>
                              <x:String>Microsoft.VisualBasic.Activities</x:String>
                              <x:String>System</x:String>
                              <x:String>System.Collections.Generic</x:String>
                              <x:String>System.Data</x:String>
                              <x:String>System.Diagnostics</x:String>
                              <x:String>System.IO</x:String>
                              <x:String>System.Linq</x:String>
                              <x:String>System.Management.Automation</x:String>
                              <x:String>System.Net.Mail</x:String>
                              <x:String>System.Xml</x:String>
                              <x:String>System.Xml.Linq</x:String>
                              <x:String>UiPath.Library</x:String>
                              <x:String>System.Windows.Markup</x:String>
                            </sco:Collection>
                          </TextExpression.Namespaces>
                          <TextExpression.References>
                            <sco:Collection x:TypeArguments="AssemblyReference">
                              <AssemblyReference>System.Activities</AssemblyReference>
                              <AssemblyReference>mscorlib</AssemblyReference>
                              <AssemblyReference>System.Data</AssemblyReference>
                              <AssemblyReference>System</AssemblyReference>
                              <AssemblyReference>System.Core</AssemblyReference>
                              <AssemblyReference>System.Management.Automation</AssemblyReference>
                              <AssemblyReference>System.Xml</AssemblyReference>
                              <AssemblyReference>System.Xml.Linq</AssemblyReference>
                              <AssemblyReference>UiPath.Library</AssemblyReference>
                              <AssemblyReference>PresentationFramework</AssemblyReference>
                              <AssemblyReference>WindowsBase</AssemblyReference>
                              <AssemblyReference>PresentationCore</AssemblyReference>
                              <AssemblyReference>System.Xaml</AssemblyReference>
                            </sco:Collection>
                          </TextExpression.References>
                          <sap2010:WorkflowViewState.ViewStateManager>
                            <sap2010:ViewStateManager>
                              <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="200,22" Id="Delay_1" />
                            </sap2010:ViewStateManager>
                          </sap2010:WorkflowViewState.ViewStateManager>
                        </Delay>
                        <While DisplayName="While To Iterate All Pages" sap:VirtualizedContainerService.HintSize="966.4,19777.6" sap2010:WorkflowViewState.IdRef="While_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <While.Condition>[page &lt;= pageNumber]</While.Condition>
                          <Sequence DisplayName="All Page Operation" sap:VirtualizedContainerService.HintSize="921.6,19618.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Page Settings" sap:VirtualizedContainerService.HintSize="880,424" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Page No." EmptyField="True" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="[page.ToString]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d4ca810139d4044a0d260c35644c7dd5" Selector="&lt;wnd aaname='Page Number' cls='Edit' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Press Enter" sap:VirtualizedContainerService.HintSize="333.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="enter" KeyModifiers="None" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d4ca810139d4044a0d260c35644c7dd5" Selector="&lt;wnd aaname='Page Number' cls='Edit' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                            </Sequence>
                            <p:ReadSpecificPage DisplayName="Read Full Pdf Page" sap:VirtualizedContainerService.HintSize="880,22.4" sap2010:WorkflowViewState.IdRef="ReadSpecificPage_1" PDF_FilePath="[file]" PDF_Text="[fullPageResult]" Page_Number="[page]" />
                            <Assign sap:VirtualizedContainerService.HintSize="880,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[fullPageResult]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[""+Environment.NewLine + fullPageResult]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[fullPageResult.Contains(&quot;Dim&quot;)]" sap:VirtualizedContainerService.HintSize="880,9908" sap2010:WorkflowViewState.IdRef="If_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="736,9758.4" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Split The Whole Text" sap:VirtualizedContainerService.HintSize="694.4,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:String[]">[allLines]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:String[]">[split(fullPageResult, vblf)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="694.4,9565.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" WorkbookPath="allText\headeFooterData.xlsx">
                                    <ui:ExcelApplicationScope.Body>
                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                        </ActivityAction.Argument>
                                        <Sequence sap:VirtualizedContainerService.HintSize="660.8,9456" sap2010:WorkflowViewState.IdRef="Sequence_148">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Write The Data In Excel" sap:VirtualizedContainerService.HintSize="619.2,600.8" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each To Write Data" sap:VirtualizedContainerService.HintSize="452,508" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[allLines]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="x:String">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="line" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416.8,373.6" sap2010:WorkflowViewState.IdRef="Sequence_134">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_133">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:ExcelWriteCell Cell="[&quot;A&quot;+i.ToString]" DisplayName="Write Cell [ Sheet1 ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Text="[line]" />
                                                    </Sequence>
                                                    <Assign DisplayName="Increment Row Number" sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[i+1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ForEach>
                                          </Sequence>
                                          <Sequence DisplayName="Data Preprocessing" sap:VirtualizedContainerService.HintSize="619.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_137">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Grid'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_86" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition OffsetX="41" OffsetY="10" Position="TopLeft" />
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="a62b22f2137268448004da93b15e4136" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='EXCEL7' name='headeFooterData.xlsx' /&gt;&lt;uia name='Grid' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Click.Target>
                                            </ui:Click>
                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Tab Item  Data'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_87" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition OffsetX="19" OffsetY="5" Position="TopLeft" />
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2e2ef2534e19401ec7b9db5e7345908c" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIPanViewer' name='Ribbon Tabs' /&gt;&lt;uia cls='NetUIRibbonTab' name='Data' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Click.Target>
                                            </ui:Click>
                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button Text'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_88" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition OffsetX="26" OffsetY="54" Position="TopLeft" />
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="18b1945e9dd3d2f374e85ca34b168e9b" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIChunk' name='Data Tools' /&gt;&lt;uia cls='NetUIRibbonButton' name='Text to Columns...' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Click.Target>
                                            </ui:Click>
                                            <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'radio button  Delimited'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Check_14">
                                              <ui:Check.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c1894b816f59235cd5aa6a370c1cef04" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 1 of 3' /&gt;&lt;ctrl name='Delimited' role='radio button' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Check.Target>
                                            </ui:Check>
                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next &gt;'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_89" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition OffsetX="47" OffsetY="18" Position="TopLeft" />
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="68b148f9d860a67dd23390d656d2272c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 1 of 3' /&gt;&lt;ctrl name='Next &amp;gt;' role='push button' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Click.Target>
                                            </ui:Click>
                                            <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Uncheck" DisplayName="Check 'check box  Tab'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Check_15">
                                              <ui:Check.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="162a83b2af9d103bc4074a6729437c6b" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Tab' role='check box' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Check.Target>
                                            </ui:Check>
                                            <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'check box  Space'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Check_16">
                                              <ui:Check.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e0ac34103ab6f51e0a09ac9946235c7f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Space' role='check box' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Check.Target>
                                            </ui:Check>
                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next &gt;'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_90" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition OffsetX="35" OffsetY="10" Position="TopLeft" />
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="a86333be3b35917a8a9a23efb2882600" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Next &amp;gt;' role='push button' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Click.Target>
                                            </ui:Click>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_19">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,145.6" sap2010:WorkflowViewState.IdRef="Sequence_136">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'radio button  Text'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="Check_17">
                                                    <ui:Check.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="21e6c38a890f7a5bbdf6a8204e8e544f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 3 of 3' /&gt;&lt;ctrl name='Text' role='radio button' /&gt;">
                                                        <ui:Target.TimeoutMS>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:Target.TimeoutMS>
                                                        <ui:Target.WaitForReady>
                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                        </ui:Target.WaitForReady>
                                                      </ui:Target>
                                                    </ui:Check.Target>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:Check>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Finish'" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="Click_91" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition OffsetX="51" OffsetY="14" Position="TopLeft" />
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="fbcc40511b1cce3ee8d1a4d8ae1cf20b" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 3 of 3' /&gt;&lt;ctrl name='Finish' role='push button' /&gt;">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:Click.Target>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:Click>
                                          </Sequence>
                                          <Sequence DisplayName="PO Number" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_138">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ P.O.Nr. ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_13" Result="[poNumCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="P.O.Nr." />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[poNumAsciiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(poNumCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[poRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[poNumCellInfo.Substring(poNumCellInfo.Length - 1)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[poNumAsciiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(poNumAsciiCode+2).ToString + poRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[poNumAsciiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_18" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[poNumVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="Date" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_139">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ Date ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_14" Result="[dateCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Date" />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[dateAsiiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(dateCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[dateRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[dateCellInfo.Substring(dateCellInfo.Length - 1)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[dateAsiiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(dateAsiiCode+2).ToString + dateRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[dateAsiiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_19" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[dateVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="Style" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_140">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ Style ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_15" Result="[styleCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Style" />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[styleAsiiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(styleCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[styleRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[styleCellInfo.Substring(styleCellInfo.Length - 1)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[styleAsiiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(styleAsiiCode+2).ToString + styleRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[styleAsiiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_20" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[styleVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="Total" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ Total ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_16" Result="[totalCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Total" />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[totalAsiiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(totalCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[totalRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[totalCellInfo.Substring(totalCellInfo.Length - 1)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[totalAsciiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(totalAsiiCode+3).ToString + totalRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[totalAsciiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_21" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[totalVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="Ship" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ Ship ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_17" Result="[shipCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Ship" />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[shipAsiiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(shipCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[shipRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[shipCellInfo.Substring(shipCellInfo.Length - 1)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[shipAsiiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(shipAsiiCode+3).ToString + shipRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[shipAsiiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_22" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[shipVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="PO Type" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ PO Type ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_18" Result="[potypeCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="P.O.Type" />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[potypeAsciiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(potypeCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[potypeRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[potypeCellInfo.Substring(potypeCellInfo.Length - 2)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[potypeAsciiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(potypeAsciiCode+2).ToString + potypeRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[potypeAsciiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_23" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[potypeVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="Factory Name" sap:VirtualizedContainerService.HintSize="619.2,1482.4" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ PO Type ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_19" Result="[factoryCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Factory" />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[factoryAsiiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(factoryCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[factoryRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[factoryCellInfo.Substring(factoryCellInfo.Length - 2)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Sequence DisplayName="FactoryAsciiCode" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_144">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign1" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar1]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+2).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign2" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_110">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar2]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+3).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign3" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_111">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar3]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+4).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign4" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar4]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+5).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign5" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_113">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar5]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+6).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign6" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_114">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar6]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+7).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign7" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_115">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar7]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+8).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign8" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_116">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[factoryAsiiCodeChar8]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Chr(factoryAsiiCode+9).ToString + factoryRowNo.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                            <Sequence DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="375.2,852.8" sap2010:WorkflowViewState.IdRef="Sequence_145">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar1]" DisplayName="Read Cell1" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_24" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal1]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar2]" DisplayName="Read Cell2" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_25" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal2]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar3]" DisplayName="Read Cell3" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_26" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal3]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar4]" DisplayName="Read Cell4" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_27" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal4]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar5]" DisplayName="Read Cell5" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_28" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal5]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar6]" DisplayName="Read Cell6" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_29" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal6]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar7]" DisplayName="Read Cell7" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_30" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal7]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                              <ui:ExcelReadCell Cell="[factoryAsiiCodeChar8]" DisplayName="Read Cell8" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_31" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                <ui:ExcelReadCell.Result>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal8]</OutArgument>
                                                </ui:ExcelReadCell.Result>
                                              </ui:ExcelReadCell>
                                            </Sequence>
                                            <Assign sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="Assign_117">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[factoryVal]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:GenericValue">[factoryVal1 + factoryVal2 + factoryVal3 + factoryVal4 + factoryVal5 + factoryVal6 + factoryVal7 + factoryVal8]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                          <Sequence DisplayName="E.T.A Date" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_218">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ ETA Date ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_26" Result="[etaCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="E.T.A." />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_144">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[etaAsciiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(etaCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_145">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[etaRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[etaCellInfo.Substring(etaCellInfo.Length - 2)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_146">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[etaAsciiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(etaAsciiCode+2).ToString + etaRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[etaAsciiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_38" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[etaVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <Sequence DisplayName="E.T.D Date" sap:VirtualizedContainerService.HintSize="619.2,580.8" sap2010:WorkflowViewState.IdRef="Sequence_219">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [ ETD Date ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_27" Result="[etdCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="E.T.D." />
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_147">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[etdAsciiCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(etdCellInfo.Substring(0,1)))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_148">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[etdRowNo]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[etdCellInfo.Substring(etdCellInfo.Length - 2)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_149">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[etdAsciiCodeChar]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Chr(etdAsciiCode+2).ToString + etdRowNo.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadCell Cell="[etdAsciiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_39" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[etdVal]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                          </Sequence>
                                          <If Condition="[fullPageResult.Contains(&quot;Invoice&quot;)]" DisplayName="If [ Invoice price-Value-Mark Cartoon ]" sap:VirtualizedContainerService.HintSize="619.2,880" sap2010:WorkflowViewState.IdRef="If_17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="475.2,730.4" sap2010:WorkflowViewState.IdRef="Sequence_172">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,637.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" WorkbookPath="allText\headeFooterData.xlsx">
                                                  <ui:ExcelApplicationScope.Body>
                                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="241.6,488" sap2010:WorkflowViewState.IdRef="Sequence_171">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Sequence DisplayName="Invoice Price" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_169">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [Invoice ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_22" Result="[invCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Invoice" />
                                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_128">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[invAsciiCode]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(invCellInfo.Substring(0,1)))]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_129">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[invRowNo]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[invCellInfo.Substring(invCellInfo.Length - 2)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_130">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[invAsciiCodeChar]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[Chr(invAsciiCode+2).ToString + invRowNo.ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:ExcelReadCell Cell="[invAsciiCodeChar]" DisplayName="Read Cell1" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_34" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                            <ui:ExcelReadCell.Result>
                                                              <OutArgument x:TypeArguments="ui:GenericValue">[invVal]</OutArgument>
                                                            </ui:ExcelReadCell.Result>
                                                          </ui:ExcelReadCell>
                                                        </Sequence>
                                                        <Sequence DisplayName="Value" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_174">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [Value]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_23" Result="[valCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="Value:" />
                                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_131">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[valAsciiCode]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(valCellInfo.Substring(0,1)))]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_132">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[valRowNo]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[valCellInfo.Substring(valCellInfo.Length - 2)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_133">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[valAsciiCodeChar]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[Chr(valAsciiCode+1).ToString + valRowNo.ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:ExcelReadCell Cell="[valAsciiCodeChar]" DisplayName="Read Cell1" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_35" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                            <ui:ExcelReadCell.Result>
                                                              <OutArgument x:TypeArguments="ui:GenericValue">[valValue]</OutArgument>
                                                            </ui:ExcelReadCell.Result>
                                                          </ui:ExcelReadCell>
                                                        </Sequence>
                                                        <Sequence DisplayName="Mark Cartoon" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_179">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ExcelLookUpRange Range="{x:Null}" DisplayName="LookUp Range [Mark Cartoon ]" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_25" Result="[markCellInfo]" SheetName="[&quot;Sheet&quot;+(3+page).ToString]" Value="GMBH">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ExcelLookUpRange>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_137">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[markAsciiCode]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Asc(markCellInfo.Substring(0,1)))]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_138">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[markRowNo]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[markCellInfo.Substring(markCellInfo.Length - 2)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_139">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[markAsciiCodeChar]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[Chr(markAsciiCode+1).ToString + markRowNo.ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:ExcelReadCell Cell="[markAsciiCodeChar]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="ExcelReadCell_37" SheetName="[&quot;Sheet&quot;+(3+page).ToString]">
                                                            <ui:ExcelReadCell.Result>
                                                              <OutArgument x:TypeArguments="ui:GenericValue">[markVal]</OutArgument>
                                                            </ui:ExcelReadCell.Result>
                                                          </ui:ExcelReadCell>
                                                        </Sequence>
                                                        <Sequence DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_170">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ExcelWriteCell Cell="[&quot;H&quot;+page.ToString]" DisplayName="Write Cell [ Invoice Price ]" sap:VirtualizedContainerService.HintSize="483.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_38" SheetName="Sheet2" Text="[invVal]">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ExcelWriteCell>
                                                          <ui:ExcelWriteCell Cell="[&quot;I&quot;+page.ToString]" DisplayName="Write Cell [ Value ]" sap:VirtualizedContainerService.HintSize="483.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_39" SheetName="Sheet2" Text="[valValue]">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ExcelWriteCell>
                                                          <If Condition="[markVal.IsNumeric]" DisplayName="If [ Mark Cartoon Numeric Or not ]" sap:VirtualizedContainerService.HintSize="483.2,209.6" sap2010:WorkflowViewState.IdRef="If_19">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <ui:ExcelWriteCell Cell="[&quot;J&quot;+page.ToString]" DisplayName="Write Cell [ Value ]" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_41" SheetName="Sheet2" Text="[markVal]">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:ExcelWriteCell>
                                                            </If.Then>
                                                          </If>
                                                        </Sequence>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ExcelApplicationScope.Body>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:ExcelApplicationScope>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                          <Sequence DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="619.2,1204.8" sap2010:WorkflowViewState.IdRef="Sequence_147">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[&quot;A&quot;+page.ToString]" DisplayName="Write Cell [ PO Num ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="Sheet2" Text="[poNumVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;B&quot;+page.ToString]" DisplayName="Write Cell [ Date ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="Sheet2" Text="[dateVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;C&quot;+page.ToString]" DisplayName="Write Cell [ Style ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="Sheet2" Text="[styleVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;D&quot;+page.ToString]" DisplayName="Write Cell [ Total Piece ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="Sheet2" Text="[totalVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;E&quot;+page.ToString]" DisplayName="Write Cell [ Ship ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="Sheet2" Text="[shipVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;F&quot;+page.ToString]" DisplayName="Write Cell [ PO Type ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="Sheet2" Text="[potypeVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;G&quot;+page.ToString]" DisplayName="Write Cell [ Factory ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_33" SheetName="Sheet2" Text="[factoryVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;K&quot;+page.ToString]" DisplayName="Write Cell [ ETA Date ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_45" SheetName="Sheet2" Text="[etaVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                            <ui:ExcelWriteCell Cell="[&quot;L&quot;+page.ToString]" DisplayName="Write Cell [ ETD Date ]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_46" SheetName="Sheet2" Text="[etdVal]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ExcelWriteCell>
                                          </Sequence>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ExcelApplicationScope.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelApplicationScope>
                                </Sequence>
                              </If.Then>
                            </If>
                            <Sequence DisplayName="Middle Part" sap:VirtualizedContainerService.HintSize="880,8751.2" sap2010:WorkflowViewState.IdRef="Sequence_205">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[fullPageResult.Contains(&quot;Dim&quot;)]" sap:VirtualizedContainerService.HintSize="712.8,8658.4" sap2010:WorkflowViewState.IdRef="If_20">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="568.8,8508.8" sap2010:WorkflowViewState.IdRef="Sequence_215">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Split The Whole Text" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_142">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[allLiness]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[split(fullPageResult, vblf)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Data Write In Excel" sap:VirtualizedContainerService.HintSize="527.2,8316" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" WorkbookPath="allText\headeFooterData.xlsx">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Write Data" sap:VirtualizedContainerService.HintSize="493.6,8206.4" sap2010:WorkflowViewState.IdRef="Sequence_204">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each To Write Data" sap:VirtualizedContainerService.HintSize="452,508" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[allLiness]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="x:String">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="line" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416.8,373.6" sap2010:WorkflowViewState.IdRef="Sequence_195">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_194">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:ExcelWriteCell Cell="[&quot;A&quot;+j.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_44" SheetName="Sheet3" Text="[line]" />
                                                    </Sequence>
                                                    <Assign DisplayName="Increment Row Number" sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="Assign_143">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[j]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[j+1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ForEach>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="452,7005.6" sap2010:WorkflowViewState.IdRef="CommentOut_33">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416.8,6927.2" sap2010:WorkflowViewState.IdRef="Sequence_206">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Excel Col Settings" sap:VirtualizedContainerService.HintSize="375.2,6834.4" sap2010:WorkflowViewState.IdRef="Sequence_196">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Grid'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_150" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="43" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1761da6aefc6ea1e0f77feb06cab3a0f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='EXCEL7' name='headeFooterData.xlsx' /&gt;&lt;uia name='Grid' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Tab Item  Data'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_151" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="17" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2e2ef2534e19401ec7b9db5e7345908c" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIPanViewer' name='Ribbon Tabs' /&gt;&lt;uia cls='NetUIRibbonTab' name='Data' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button Text'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_152" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="26" OffsetY="46" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="18b1945e9dd3d2f374e85ca34b168e9b" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIChunk' name='Data Tools' /&gt;&lt;uia cls='NetUIRibbonButton' name='Text to Columns...' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next &gt;'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_153" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="43" OffsetY="14" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="68b148f9d860a67dd23390d656d2272c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 1 of 3' /&gt;&lt;ctrl name='Next &amp;gt;' role='push button' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_154" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="23183a21cd4fe9612ba762c42fc90f3e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_155" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="8" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="23183a21cd4fe9612ba762c42fc90f3e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_156" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="9" OffsetY="9" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c3a944e9818f1e03324f858d55292504" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_157" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="9" OffsetY="9" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="a21060ddc0cc479d34d9d807a009eb2c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_158" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="9" OffsetY="9" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b1778efc9685606e5dcb1fab0169bca2" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_159" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="9" OffsetY="9" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="db7a9d3900228626ec871d9d2edbf78e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_160" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="9" OffsetY="9" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="fe38c50c17c8ded1212cd4c2bda84377" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_161" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="9" OffsetY="9" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b4a0feff9eed580ae5e5c18ec8bd350c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_162" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="82" OffsetY="17" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="de8c999262928a767e9a3656d5fbdaca" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_163" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="114" OffsetY="17" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="77d80a5173dbd3c534ebb081b4cd6ba5" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_164" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="141" OffsetY="16" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="efde3bef5b038e817e78a0a5a60b4c51" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_165" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="172" OffsetY="16" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="baee8b108cedf39f42b422606c266139" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_166" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="217" OffsetY="17" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="932b8d2d87ed4ad475aa27f3dae397c8" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_167" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="256" OffsetY="16" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="734ea3017ff0681cd7cb58191cb7e947" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_168" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="282" OffsetY="17" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4cbb64af6ffefd5f874a325a0421d791" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_169" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="320" OffsetY="18" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3a31d929efa210dad3daaaf28f2c65e6" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_170" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="397" OffsetY="17" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4ed5649048f894bdf6a8bf3c11d4c14f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_171" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="428" OffsetY="16" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b4b032c78ec23ed27143fc14e8a9efdc" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_172" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="6" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b4455b942e93ebeeb906d4e0eda2d01a" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_173" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="6" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1d5feace3dd741d45d3613d996a15663" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_174" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="6" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="167e3f278ad8a864fc21a70c410d1b76" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_175" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="6" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="6d1d915f0c5b0aae0e28b7b130eb7d1a" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_176" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="487" OffsetY="17" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5b0ccb2708d8ca3881c5dbbe52411d59" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_177" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1edc8edd2b47ecced3d1784aed00a657" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_178" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="de074bae57346c9ad072df968fd3e6e1" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_179" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="04bf57828ddfa9790b89cf3844bc3995" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_180" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="58ab629c396b9ebd7ec6962b3c492772" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_181" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="16b4c0ea12beb69a65dcc65555ff2494" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_182" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5902006662a953f62d14d9a3ad0c09a1" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_183" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bb1ff3c6d19532a19316626a7abe81fa" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_184" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="29817989b99d577ff5aac2b1c22b7058" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_185" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2b849c1952f10d525f0cd51fc2c136b4" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_186" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5ec99c3c0fbd5140f03cefa0ea437832" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_187" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c1287b2fad2e189019ee28e516091f71" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_188" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="a9de2908c132127657e4da2db0a85add" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_189" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1b94d3c57af754a25178030b36cf2171" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_190" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7f66ef5e31154b72dd44187a09ba6cac" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_191" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="7" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="db5c696baf535d999df02e2f8074fe97" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_192" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="481" OffsetY="85" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b1154bdb304d384092bb139a1d34ce2f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl role='graphic' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next &gt;'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_193" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="49" OffsetY="11" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b21819c646403bb030faebc23e8b678a" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 2 of 3' role='dialog' /&gt;&lt;ctrl name='Next &amp;gt;' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Finish'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_194" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="44" OffsetY="10" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="a0538a485e0cfa880276260fb0cec982" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 3 of 3' /&gt;&lt;ctrl name='Convert Text to Columns Wizard - Step 3 of 3' role='dialog' /&gt;&lt;ctrl name='Finish' role='push button' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_57" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                  </Sequence>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="452,240" sap2010:WorkflowViewState.IdRef="CommentOut_30">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416.8,161.6" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Data Filter" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_198">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'EXCEL7'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_195" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="75" OffsetY="12" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e36794ed77f22a29a253c1dc71503a31" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='EXCEL7' name='headeFooterData.xlsx' /&gt;&lt;uia name='Grid' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_58" Key="l" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_59" Key="down" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_60" Key="down" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_61" Key="f" KeyModifiers="None" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_62" Key="down" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_63" Key="down" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_64" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'EDTBX'" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_5" SendWindowMessages="False" SimulateType="False" Text="7">
                                                      <ui:TypeInto.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b72b8e56b921c125eb1ff6fce71f9ced" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Custom AutoFilter' /&gt;&lt;wnd cls='EDTBX' idx='1' /&gt;" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:TypeInto.Target>
                                                    </ui:TypeInto>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_65" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_66" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                  </Sequence>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="452,240" sap2010:WorkflowViewState.IdRef="CommentOut_32">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416.8,161.6" sap2010:WorkflowViewState.IdRef="Sequence_203">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Final Clean Data" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_202">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select All Filtered Data" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_67" Key="a" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy All Filtered Data" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_68" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Create New Sheet [ Sheet3 ]" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_69" Key="f11" KeyModifiers="Shift" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Paste All Filtered Data In New Sheet" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_70" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Simple Flag" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_71" Key="left" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:ExcelDeleteRange DisplayName=" Delete 1 Unnecessary Row" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="A1" SheetName="Sheet3" ShiftCells="True" ShiftOption="EntireRow" />
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_31">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416.8,161.6" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Sequence DisplayName="Delete Current Sheet2" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_200">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey [ Go To Sheet2 From Sheet3 ]" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_72" Key="pgdn" KeyModifiers="Ctrl" SpecialKey="True">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                            </ui:SendHotkey>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_73" Key="h" KeyModifiers="Alt">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                            </ui:SendHotkey>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_74" Key="d" KeyModifiers="None">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                            </ui:SendHotkey>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_75" Key="s" KeyModifiers="None">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                            </ui:SendHotkey>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_76" Key="enter" KeyModifiers="None" SpecialKey="True">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                            </ui:SendHotkey>
                                                          </Sequence>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_77" Key="pgdn" KeyModifiers="Ctrl" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_78" Key="pgdn" KeyModifiers="Ctrl" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Save" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_79" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                  </Sequence>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                            <Assign DisplayName="Increment Page No" sap:VirtualizedContainerService.HintSize="636,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[page]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[page + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Increment Counter" sap:VirtualizedContainerService.HintSize="636,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[page + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </While>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WindowScope>
                <Delay mva:VisualBasic.Settings="{x:Null}" DisplayName="Delay 1 second" Duration="00:00:01" sap:VirtualizedContainerService.HintSize="797.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_2">
                  <TextExpression.Namespaces>
                    <sco:Collection x:TypeArguments="x:String">
                      <x:String>System.Activities</x:String>
                      <x:String>System.Activities.Statements</x:String>
                      <x:String>System.Activities.Expressions</x:String>
                      <x:String>System.Activities.Validation</x:String>
                      <x:String>System.Activities.XamlIntegration</x:String>
                      <x:String>Microsoft.VisualBasic.Activities</x:String>
                      <x:String>System</x:String>
                      <x:String>System.Collections.Generic</x:String>
                      <x:String>System.Data</x:String>
                      <x:String>System.Diagnostics</x:String>
                      <x:String>System.IO</x:String>
                      <x:String>System.Linq</x:String>
                      <x:String>System.Management.Automation</x:String>
                      <x:String>System.Net.Mail</x:String>
                      <x:String>System.Xml</x:String>
                      <x:String>System.Xml.Linq</x:String>
                      <x:String>UiPath.Library</x:String>
                      <x:String>System.Windows.Markup</x:String>
                    </sco:Collection>
                  </TextExpression.Namespaces>
                  <TextExpression.References>
                    <sco:Collection x:TypeArguments="AssemblyReference">
                      <AssemblyReference>System.Activities</AssemblyReference>
                      <AssemblyReference>mscorlib</AssemblyReference>
                      <AssemblyReference>System.Data</AssemblyReference>
                      <AssemblyReference>System</AssemblyReference>
                      <AssemblyReference>System.Core</AssemblyReference>
                      <AssemblyReference>System.Management.Automation</AssemblyReference>
                      <AssemblyReference>System.Xml</AssemblyReference>
                      <AssemblyReference>System.Xml.Linq</AssemblyReference>
                      <AssemblyReference>UiPath.Library</AssemblyReference>
                      <AssemblyReference>PresentationFramework</AssemblyReference>
                      <AssemblyReference>WindowsBase</AssemblyReference>
                      <AssemblyReference>PresentationCore</AssemblyReference>
                      <AssemblyReference>System.Xaml</AssemblyReference>
                    </sco:Collection>
                  </TextExpression.References>
                  <sap2010:WorkflowViewState.ViewStateManager>
                    <sap2010:ViewStateManager>
                      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="200,22" Id="Delay_1" />
                    </sap2010:ViewStateManager>
                  </sap2010:WorkflowViewState.ViewStateManager>
                </Delay>
                <ui:CloseApplication DisplayName="Close File" sap:VirtualizedContainerService.HintSize="797.6,52.8" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                  <ui:CloseApplication.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="534152ddeb30c92d7d823018323e1c09" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='07_700292ff_PRIDE_27.02.20- Lerros.pdf - Adobe Acrobat Reader DC' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:CloseApplication.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CloseApplication>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Data Processing" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_19" WorkbookPath="allText\headeFooterData.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Settings" sap:VirtualizedContainerService.HintSize="416.8,379.2" sap2010:WorkflowViewState.IdRef="Sequence_214">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Excel Col Setting" sap:VirtualizedContainerService.HintSize="375.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_217">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Grid'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_242" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="62" OffsetY="8" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ab90697d65be6d36cdfd145cd6b91f9c" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='EXCEL7' name='headeFooterData.xlsx' /&gt;&lt;uia name='Grid' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Tab Item  Data'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_243" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="19" OffsetY="10" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2e2ef2534e19401ec7b9db5e7345908c" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIPanViewer' name='Ribbon Tabs' /&gt;&lt;uia cls='NetUIRibbonTab' name='Data' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button Text'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_244" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="21" OffsetY="55" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="18b1945e9dd3d2f374e85ca34b168e9b" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='MsoCommandBar' name='Ribbon' /&gt;&lt;uia cls='NetUIChunk' name='Data Tools' /&gt;&lt;uia cls='NetUIRibbonButton' name='Text to Columns...' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next &gt;'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_245" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="65" OffsetY="10" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="916f88e2a8423ed18b81ba31360e26a0" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 1 of 3' /&gt;&lt;ctrl name='Next &amp;gt;' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_246" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="7" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d79b3cee4759d530f6ed09bd5af0edf5" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_247" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0370009cf476618d8c29b36182ebb8ff" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_248" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="93d85011c79c00a096f6f4af8649f83e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_249" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ff3a1f85dbc994b0ef806ab96a937d04" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_250" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e3e87d7b29f1f1a58709bb4914a0fa4a" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_251" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4dd05cd400973bc02af6dbd9cb7661ed" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_252" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="11" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="91f4334fc4a6880f770592ef78af8142" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Line down'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_253" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="10" OffsetY="10" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7d02c3bfd496f8b6adaf0e8e5d76ec8e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='2' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Line down' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_254" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="89" OffsetY="16" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5bc6c9ad894d7bf60089da63f7a37d6f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_255" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="112" OffsetY="18" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="144f5fbef3a8f492eb5c1ac080d1858d" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_256" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="138" OffsetY="18" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="213c2bc118d691328e0bedf28c3ddd99" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_257" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="168" OffsetY="18" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ad9686f14c85be84cb72fa462aeb2234" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_258" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="271" OffsetY="18" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c21946f8698a96a02843935064f05e99" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_259" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="394" OffsetY="20" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="caac3dca2b3f06dccee408fa18ba972f" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_260" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="433" OffsetY="18" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c7a3f7dd950364ac36bacc5bc78c417e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_261" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="510" OffsetY="19" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d6709249a97eb9b910a3aa3792dc5666" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_262" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1df87c6febf1d7b28b02e89650fb7cd1" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_263" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="76054233477e87598837791318a6bb5c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_264" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="347d14c15da123e8a2adb163ac8283c5" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_265" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d216957133e8baff821d3fd169e8cad8" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_266" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3a2b8708ce5b82a279975f297fdbad98" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_267" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="73f68c69828a6634a713d4452b12371c" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_268" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="a6d4811ee7f1269265600bcea218f526" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_269" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="179a0c41eb0312bb672d970a793dc0df" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_270" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7a2d95ca50683274b1f83153640e5705" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_271" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0b0c52f11688cdee717377d4565f4896" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_272" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d7f277b01eb56623396c2e0c93bd4343" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_273" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c9fcfed0ffc938cf1b234402965568bf" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_274" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3370026f6d9e6e3d8500f257b13feac3" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_275" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ee384975964d89c5cb3b750be7a9e739" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_276" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="46e8d76b08d9d80476d7efaa8e91761e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_277" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="cd77715fee79a53b20c58f505e86d712" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_278" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1ee6c78a60aac7b35bf6d85000ec9f37" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_279" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="04fc49afacb8893b71368f4b4d50e57b" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_280" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c5d713f9c97b95329625ca4fb672dc55" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_281" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0c6ec317a4182d60f6b80277226e1fc8" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_282" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="6" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="66caa831b4cb40be2fa4dd7f45b3b367" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;wnd cls='ScrollBar' idx='1' /&gt;&lt;ctrl automationid='DownButton' idx='1' name='Column right' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_283" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="430" OffsetY="90" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bac40eac6a266490267648ac4b40156e" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Click 'graphic'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_284" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="467" OffsetY="86" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b7992fcc5b2e5f486a1a43072c6b9386" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl role='graphic' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next &gt;'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_285" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="f2978f36a964ba6a5e8fdf4b2e33d913" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Convert Text to Columns Wizard - Step 2 of 3' /&gt;&lt;ctrl name='Next &amp;gt;' role='push button' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Click_286" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_103" Key="enter" KeyModifiers="None" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_104" Key="s" KeyModifiers="Ctrl">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
              </Sequence>
              <Sequence DisplayName="Data Filter" sap:VirtualizedContainerService.HintSize="375.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_208">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'EXCEL7'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_241" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="75" OffsetY="12" Position="TopLeft" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e36794ed77f22a29a253c1dc71503a31" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='headeFooterData.xlsx - *' /&gt;&lt;uia cls='EXCEL7' name='headeFooterData.xlsx' /&gt;&lt;uia name='Grid' /&gt;" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_81" Key="l" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_82" Key="down" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_83" Key="down" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_84" Key="f" KeyModifiers="None" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_85" Key="down" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_86" Key="down" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_87" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'EDTBX'" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_6" SendWindowMessages="False" SimulateType="False" Text="7">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b72b8e56b921c125eb1ff6fce71f9ced" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Custom AutoFilter' /&gt;&lt;wnd cls='EDTBX' idx='1' /&gt;" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_88" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_89" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
              </Sequence>
              <Sequence DisplayName="Final Clean Data" sap:VirtualizedContainerService.HintSize="375.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_212">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select All Filtered Data" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_90" Key="a" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy All Filtered Data" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_91" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Go to Sheet2" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_105" Key="pgdn" KeyModifiers="Ctrl" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Go to Sheet1" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_106" Key="pgdn" KeyModifiers="Ctrl" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Paste All Filtered Data In New Sheet" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_93" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Simple Flag" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_94" Key="left" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:ExcelDeleteRange DisplayName=" Delete 1 Unnecessary Row" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_4" Range="A1" SheetName="Sheet1" ShiftCells="True" ShiftOption="EntireRow" />
                <Sequence DisplayName="Delete Sheet3" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_210">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey [ Go To Sheet1 From Sheet2 ]" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_95" Key="pgup" KeyModifiers="Ctrl" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey [ Go To Sheet2 From Sheet3 ]" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_107" Key="pgup" KeyModifiers="Ctrl" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_96" Key="h" KeyModifiers="Alt">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_97" Key="d" KeyModifiers="None">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_98" Key="s" KeyModifiers="None">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_99" Key="enter" KeyModifiers="None" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                </Sequence>
                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Save" EmptyField="False" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_102" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:SendHotkey>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
    </Sequence>
    <Sequence DisplayName="Delete Unnecessary Sheets" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_226">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <bew:GetSheetsName FilePassword="{x:Null}" ModifyPassword="{x:Null}" Delay="3" DisplayName="Get Sheets Name" FilePath="[Environment.CurrentDirectory+&quot;\allText\headeFooterData.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="441.6,69.6" sap2010:WorkflowViewState.IdRef="GetSheetsName_1" SheetName="EmptySheet" SheetsName="[allSheets]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </bew:GetSheetsName>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="441.6,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[allSheets]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="627.2,312" sap2010:WorkflowViewState.IdRef="Sequence_225">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[sheet = &quot;Sheet1&quot; Or sheet = &quot;Sheet2&quot;]" sap:VirtualizedContainerService.HintSize="585.6,219.2" sap2010:WorkflowViewState.IdRef="If_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Else>
                  <bes:DeleteSheet FilePassword="{x:Null}" ModifyPassword="{x:Null}" Delay="3" DisplayName="Delete Sheet" FilePath="[Environment.CurrentDirectory+&quot;\allText\headeFooterData.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="441.6,69.6" sap2010:WorkflowViewState.IdRef="DeleteSheet_1" SheetName="[sheet]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </bes:DeleteSheet>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>